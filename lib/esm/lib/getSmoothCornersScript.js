var getSmoothCornersScript = function () {
    var scriptContent = "/**\n * Created by wopian/smooth-corners\n * https://github.com/wopian/smooth-corners\n */\nclass SmoothCornersPainter {\n  static get inputProperties() {\n    return [\"--smooth-corners\"];\n  }\n\n  superellipse(a, b, nX = 4, nY) {\n    if (Number.isNaN(nX)) nX = 4;\n    if (typeof nY === \"undefined\" || Number.isNaN(nY)) nY = nX;\n    if (nX > 100) nX = 100;\n    if (nY > 100) nY = 100;\n    if (nX < 0.00000000001) nX = 0.00000000001;\n    if (nY < 0.00000000001) nY = 0.00000000001;\n\n    const nX2 = 2 / nX;\n    const nY2 = nY ? 2 / nY : nX2;\n    const steps = 360;\n    const step = (2 * Math.PI) / steps;\n    const points = t => {\n      const cosT = Math.cos(t);\n      const sinT = Math.sin(t);\n      return {\n        x: Math.abs(cosT) ** nX2 * a * Math.sign(cosT),\n        y: Math.abs(sinT) ** nY2 * b * Math.sign(sinT)\n      };\n    };\n    return Array.from({ length: steps }, (_, i) => points(i * step));\n  }\n\n  paint(ctx, geom, properties) {\n    const [nX, nY] = properties\n      .get(\"--smooth-corners\")\n      .toString()\n      .replace(/ /g, \"\")\n      .split(\",\");\n\n    const width = geom.width / 2;\n    const height = geom.height / 2;\n    const smooth = this.superellipse(\n      width,\n      height,\n      parseFloat(nX, 10),\n      parseFloat(nY, 10)\n    );\n\n    ctx.fillStyle = \"#000\";\n    ctx.setTransform(1, 0, 0, 1, width, height);\n    ctx.beginPath();\n\n    for (let i = 0; i < smooth.length; i++) {\n      const { x, y } = smooth[i];\n      if (i === 0) ctx.moveTo(x, y);\n      else ctx.lineTo(x, y);\n    }\n\n    ctx.closePath();\n    ctx.fill();\n  }\n}\n\nregisterPaint(\"smooth-corners\", SmoothCornersPainter);\n";
    return "data:application/javascript;charset=utf8,".concat(encodeURIComponent(scriptContent));
};
export default getSmoothCornersScript;
